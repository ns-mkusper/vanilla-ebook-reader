name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  SLINT_NO_QT: "1"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets -- --deny warnings
      - name: Cargo check
        run: cargo check --workspace --all-targets

  android-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android
      - name: Cargo check (android)
        run: cargo check --target aarch64-linux-android --no-default-features

  android-apk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android, x86_64-linux-android
      - name: Install cargo-ndk
        run: cargo install cargo-ndk --locked
      - name: Set up Android NDK
        id: ndk
        uses: android-actions/setup-ndk@v3
        with:
          ndk-version: 26.1.10909125
      - name: Build JNI libraries
        env:
          ANDROID_NDK_HOME: ${{ steps.ndk.outputs.ndk-path }}
        run: |
          cargo ndk -t x86_64 -t arm64-v8a \
            -o android/app/src/main/jniLibs \
            build --no-default-features --features native-audio
      - name: Assemble debug APK
        working-directory: android
        env:
          ANDROID_NDK_HOME: ${{ steps.ndk.outputs.ndk-path }}
        run: ./gradlew assembleDebug
