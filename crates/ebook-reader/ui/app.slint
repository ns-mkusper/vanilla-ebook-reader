import { VerticalBox, HorizontalBox, ListView, Button, TextEdit } from "std-widgets.slint";

export struct EbookItem {
    title: string,
    author: string,
    detail: string,
    has_audio: bool,
    has_text: bool,
}

export struct ReaderChapter {
    title: string,
}

export component MainWindow inherits Window {
    in property <[EbookItem]> ebooks;
    in property <string> status_text;
    callback play_selected(index: int);
    callback read_selected(index: int);

    VerticalBox {
        padding: 16px;
        spacing: 12px;

        Text {
            text: "Vanilla Ebook Reader";
            font-size: 24px;
            horizontal-alignment: center;
        }

        Rectangle {
            border-width: 1px;
            border-color: #33000000;
            min-height: 320px;

            ListView {
                for ebook[idx] in root.ebooks: Rectangle {
                    background: ((idx / 2) * 2 == idx) ? #08000000 : #10FFFFFF;
                    height: 64px;

                    HorizontalBox {
                        padding: 8px;
                        spacing: 8px;

                        Rectangle {
                            width: 48px;
                            height: 48px;
                            border-radius: 6px;
                            background: #30000000;
                        }

                        VerticalBox {
                            Text {
                                text: ebook.title;
                                font-weight: 600;
                            }
                            Text {
                                text: ebook.author == "" ? "Unknown Author" : ebook.author;
                                color: #88000000;
                            }
                            Text {
                                text: ebook.detail;
                                font-size: 12px;
                                color: #66000000;
                            }
                        }

                        Rectangle { min-width: 0px; }

                        HorizontalBox {
                            spacing: 8px;

                            Button {
                                text: "Read";
                                enabled: ebook.has_text;
                                visible: ebook.has_text;
                                clicked => root.read_selected(idx);
                            }
                            Button {
                                text: "Play";
                                enabled: ebook.has_audio;
                                visible: ebook.has_audio;
                                clicked => root.play_selected(idx);
                            }
                        }
                    }
                }
            }
        }

        Text {
            text: root.status_text;
            font-size: 12px;
            color: #66000000;
        }
    }
}

export struct ReaderSentence {
    text: string,
}

export struct ReaderWord {
    text: string,
}

export component ReaderWindow inherits Window {
    in property <string> book_title;
    in property <[ReaderChapter]> chapters;
    in-out property <int> selected_index;
    in property <string> chapter_title;
    in property <string> content;
    in property <[ReaderSentence]> sentences;
    in-out property <int> active_sentence_index;
    in property <[ReaderWord]> active_sentence_words;
    in-out property <int> active_word_index;
    in property <string> active_sentence_text;
    callback chapter_selected(index: int);
    callback sentence_selected(index: int);
    callback tts_play();
    callback tts_pause();
    callback tts_stop();
    callback tts_backward_sentence();
    callback tts_forward_sentence();
    callback tts_jump_backward();
    callback tts_jump_forward();
    callback request_close();

    width: 900px;
    height: 640px;

    VerticalBox {
        padding: 16px;
        spacing: 12px;

        Text {
            text: root.book_title;
            font-size: 22px;
            font-weight: 600;
        }

        HorizontalBox {
            spacing: 12px;

            Rectangle {
                width: 220px;
                border-width: 1px;
                border-color: #30000000;

                ListView {
                    for chapter[idx] in root.chapters: TouchArea {
                        height: 40px;
                        Rectangle {
                            width: parent.width;
                            height: parent.height;
                            background: {
                                if (idx == root.selected_index) {
                                    #20607D8B
                                } else {
                                    #00000000
                                }
                            };

                            Text {
                                text: chapter.title;
                                x: 8px;
                                vertical-alignment: center;
                                color: {
                                    if (idx == root.selected_index) {
                                        #FFFFFF
                                    } else {
                                        #DD000000
                                    }
                                };
                            }
                        }
                        clicked => root.chapter_selected(idx);
                    }
                }
            }

            Rectangle {
                border-width: 1px;
                border-color: #30000000;
                horizontal-stretch: 1.0;

                VerticalBox {
                    padding: 12px;
                    spacing: 8px;

                    Text {
                        text: root.chapter_title;
                        font-size: 18px;
                        font-weight: 600;
                    }

                    Rectangle {
                        height: 120px;
                        border-width: 1px;
                        border-color: #20000000;

                        ListView {
                            for sentence[idx] in root.sentences: TouchArea {
                                height: 36px;
                                Rectangle {
                                    width: parent.width;
                                    height: parent.height;
                                    background: {
                                        if (idx == root.active_sentence_index) {
                                            #20607D8B
                                        } else {
                                            #00000000
                                        }
                                    };

                                    Text {
                                        text: sentence.text;
                                        x: 8px;
                                        vertical-alignment: center;
                                        color: {
                                            if (idx == root.active_sentence_index) {
                                                #FFFFFF
                                            } else {
                                                #DD000000
                                            }
                                        };
                                    }
                                }
                                clicked => root.sentence_selected(idx);
                            }
                        }
                    }

                    Rectangle {
                        border-width: 1px;
                        border-color: #1A000000;
                        vertical-stretch: 1.0;

                        TextEdit {
                            text: root.content;
                            read-only: true;
                            wrap: word-wrap;
                        }
                    }

                    Text {
                        text: root.active_sentence_text;
                        font-size: 16px;
                        color: #33506478;
                    }

                    HorizontalBox {
                        spacing: 4px;
                        for word[idx] in root.active_sentence_words: Text {
                            text: word.text;
                            font-size: 16px;
                            color: {
                                if (idx == root.active_word_index) {
                                    #FF004D9C
                                } else {
                                    #DD000000
                                }
                            };
                        }
                    }
                }
            }
        }

        HorizontalBox {
            alignment: end;
            spacing: 12px;

            HorizontalBox {
                spacing: 6px;
                Button { text: "⏮ Sentence"; clicked => root.tts_backward_sentence(); }
                Button { text: "⏪ 10s"; clicked => root.tts_jump_backward(); }
                Button { text: "▶"; clicked => root.tts_play(); }
                Button { text: "⏸"; clicked => root.tts_pause(); }
                Button { text: "⏹"; clicked => root.tts_stop(); }
                Button { text: "⏩ 10s"; clicked => root.tts_jump_forward(); }
                Button { text: "⏭ Sentence"; clicked => root.tts_forward_sentence(); }
            }

            Button {
                text: "Close";
                clicked => root.request_close();
            }
        }
    }
}
